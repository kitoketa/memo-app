{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\roone\\\\git\\\\memo-app\\\\components\\\\MemoList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from './Account';\n\nvar MemoList = /*#__PURE__*/function (_Component) {\n  _inherits(MemoList, _Component);\n\n  var _super = _createSuper(MemoList);\n\n  function MemoList(props) {\n    var _this;\n\n    _classCallCheck(this, MemoList);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.logouted = _this.logouted.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MemoList, [{\n    key: \"logined\",\n    value: function logined() {\n      this.getMemoList();\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/');\n    }\n  }, {\n    key: \"getMemoList\",\n    value: function getMemoList() {\n      var _this2 = this;\n\n      if (this.props.email == undefined || this.props.email == '') {\n        return;\n      }\n\n      var email = Lib.encodeEmail(this.props.email);\n      var db = firebase.database();\n      var ref = db.ref('memo/');\n      var self = this;\n      ref.orderByKey().equalTo(email).on('value', function (snapshot) {\n        var d = Lib.deepcopy(snapshot.val());\n\n        _this2.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: _this2.props.login,\n            username: _this2.props.username,\n            email: _this2.props.email,\n            data: d,\n            items: self.getItem(d)\n          }\n        });\n      });\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(data) {\n      if (data == undefined) {\n        return;\n      }\n\n      var res = [];\n      console.log(data);\n\n      for (var i in data) {\n        console.log(i);\n\n        for (var j in data[i]) {\n          console.log(data[i][j]);\n          var id = data[i][j].id;\n          var title = data[i][j].title;\n          var body = data[i][j].body;\n          res.push();\n        }\n\n        break;\n      }\n\n      console.log(res);\n      return res;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = 'タイトル';\n      var body = '詳細';\n      var title2 = 'タイトル2';\n      var body2 = '詳細2';\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"\\u30E1\\u30E2\\u4E00\\u89A7\"), __jsx(Account, {\n        self: this,\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }), __jsx(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, title))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, body)))), __jsx(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, title2))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, body2)))), this.props.items);\n    }\n  }]);\n\n  return MemoList;\n}(Component);\n\nMemoList = connect(function (state) {\n  return state;\n})(MemoList);\nexport default MemoList;","map":{"version":3,"sources":["C:/Users/roone/git/memo-app/components/MemoList.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","MemoList","props","fontSize","padding","logined","bind","logouted","getMemoList","push","email","undefined","encodeEmail","db","database","ref","self","orderByKey","equalTo","on","snapshot","d","deepcopy","val","dispatch","type","value","login","username","data","items","getItem","res","console","log","i","j","id","title","body","title2","body2","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport firebase from \"firebase\";\r\nimport Lib from '../static/address_lib';\r\nimport Account from './Account';\r\n\r\nclass MemoList extends Component {\r\n    style = {\r\n        fontSize:\"12pt\",\r\n        padding:\"5px 10px\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.logined = this.logined.bind(this);\r\n        this.logouted = this.logouted.bind(this);\r\n    }\r\n\r\n    logined(){\r\n        this.getMemoList();\r\n    }\r\n    logouted(){\r\n        Router.push('/');\r\n    }\r\n\r\n    getMemoList() {\r\n        if (this.props.email == undefined ||\r\n            this.props.email == ''){ return; }\r\n        let email = Lib.encodeEmail(this.props.email);\r\n        let db = firebase.database();\r\n        let ref = db.ref('memo/');\r\n        let self = this;\r\n        ref.orderByKey()\r\n            .equalTo(email)\r\n            .on('value', (snapshot)=>{\r\n                let d = Lib.deepcopy(snapshot.val());\r\n                this.props.dispatch({\r\n                    type:'UPDATE_USER',\r\n                    value:{\r\n                        login:this.props.login,\r\n                        username: this.props.username,\r\n                        email: this.props.email,\r\n                        data:d,\r\n                        items:self.getItem(d)\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    getItem(data) {\r\n        if (data == undefined){ return; }\r\n        let res = [];\r\n        console.log(data)\r\n        for (let i in data){\r\n            console.log(i)\r\n            for(let j in data[i]){\r\n                console.log(data[i][j])\r\n                let id = data[i][j].id;\r\n                let title = data[i][j].title;\r\n                let body = data[i][j].body;\r\n                res.push(\r\n                // <li key={title} data-tag={body}>\r\n                //     タイトル:{title}\r\n                //     詳細:{body}\r\n                // </li>)\r\n                // <td>{title}<br>{body}</br></td>          \r\n                );\r\n            }\r\n            break;\r\n        }\r\n        console.log(res)\r\n        return res;\r\n    }\r\n\r\n    render(){\r\n        const title = 'タイトル'\r\n        const body = '詳細'\r\n        const title2 = 'タイトル2'\r\n        const body2 = '詳細2'\r\n        return (\r\n            <div>\r\n                <h1>メモ一覧</h1>\r\n                <Account self={this} onLogined={this.logined}\r\n                    onLogouted={this.logouted} />\r\n            <hr/>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{title}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{body}</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{title2}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{body2}</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                {this.props.items}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMemoList = connect((state)=> state)(MemoList);\r\nexport default MemoList;"]},"metadata":{},"sourceType":"module"}