{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\roone\\\\git\\\\memo-app\\\\components\\\\Account.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nvar Account = /*#__PURE__*/function (_Component) {\n  _inherits(Account, _Component);\n\n  var _super = _createSuper(Account);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.login_check = _this.login_check.bind(_assertThisInitialized(_this));\n    return _this;\n  } // ログイン処理\n\n\n  _createClass(Account, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var self = this;\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        _this2.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: true,\n            username: result.user.displayName,\n            email: result.user.email,\n            data: _this2.props.data,\n            items: _this2.props.items\n          }\n        });\n\n        _this2.props.onLogined();\n      });\n    } // ログアウト処理\n\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      console.log(\"logout\");\n      firebase.auth().signOut();\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: false,\n          username: '(click here!)',\n          email: '',\n          data: [],\n          items: []\n        }\n      });\n      this.props.onLogouted();\n    } // login,loguoutの✓\n\n  }, {\n    key: \"login_check\",\n    value: function login_check() {\n      if (this.props.login == false) {\n        this.login();\n      } else {\n        this.logout();\n      }\n    } // レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"p\", {\n        className: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, __jsx(\"span\", {\n        className: \"account\",\n        onClick: this.login_check,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, \"LOGINED: \", this.props.username));\n    }\n  }]);\n\n  return Account;\n}(Component);\n\nAccount = connect(function (state) {\n  return state;\n})(Account);\nexport default Account;","map":{"version":3,"sources":["C:/Users/roone/git/memo-app/components/Account.js"],"names":["React","Component","connect","firebase","Account","props","fontSize","padding","login_check","bind","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","login","username","user","displayName","email","data","items","onLogined","console","log","signOut","onLogouted","logout","state"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAGMC,O;;;;;AAOJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,4DANX;AACNC,MAAAA,QAAQ,EAAC,MADH;AAENC,MAAAA,OAAO,EAAC;AAFF,KAMW;;AAEjB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAFiB;AAGlB,G,CAGD;;;;;4BACO;AAAA;;AACL,UAAIC,QAAQ,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAf;AACA,UAAIC,IAAI,GAAG,IAAX;AACAV,MAAAA,QAAQ,CAACQ,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACGK,IADH,CACQ,UAACC,MAAD,EAAU;AACd,QAAA,MAAI,CAACX,KAAL,CAAWY,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAC,aADa;AAElBC,UAAAA,KAAK,EAAC;AACJC,YAAAA,KAAK,EAAC,IADF;AAEJC,YAAAA,QAAQ,EAAEL,MAAM,CAACM,IAAP,CAAYC,WAFlB;AAGJC,YAAAA,KAAK,EAAER,MAAM,CAACM,IAAP,CAAYE,KAHf;AAIJC,YAAAA,IAAI,EAAC,MAAI,CAACpB,KAAL,CAAWoB,IAJZ;AAKJC,YAAAA,KAAK,EAAC,MAAI,CAACrB,KAAL,CAAWqB;AALb;AAFY,SAApB;;AAUA,QAAA,MAAI,CAACrB,KAAL,CAAWsB,SAAX;AACH,OAbD;AAcD,K,CAGD;;;;6BACQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA1B,MAAAA,QAAQ,CAACQ,IAAT,GAAgBmB,OAAhB;AACA,WAAKzB,KAAL,CAAWY,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAC,aADa;AAElBC,QAAAA,KAAK,EAAC;AACJC,UAAAA,KAAK,EAAC,KADF;AAEJC,UAAAA,QAAQ,EAAE,eAFN;AAGJG,UAAAA,KAAK,EAAE,EAHH;AAIJC,UAAAA,IAAI,EAAC,EAJD;AAKJC,UAAAA,KAAK,EAAC;AALF;AAFY,OAApB;AAUA,WAAKrB,KAAL,CAAW0B,UAAX;AACD,K,CAGD;;;;kCACa;AACX,UAAI,KAAK1B,KAAL,CAAWe,KAAX,IAAoB,KAAxB,EAA8B;AAC1B,aAAKA,KAAL;AACH,OAFD,MAEO;AACL,aAAKY,MAAL;AACD;AACF,K,CAGD;;;;6BACS;AACP,aACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,SAAjB;AACE,QAAA,OAAO,EAAE,KAAKxB,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEY,KAAKH,KAAL,CAAWgB,QAFvB,CADF,CADF;AAQD;;;;EAxEmBpB,S;;AA4EtBG,OAAO,GAAGF,OAAO,CAAC,UAAC+B,KAAD;AAAA,SAAUA,KAAV;AAAA,CAAD,CAAP,CAAyB7B,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nclass Account extends Component {\r\n  style = {\r\n    fontSize:\"12pt\",\r\n    padding:\"5px 10px\"\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.login_check = this.login_check.bind(this);\r\n  }\r\n\r\n\r\n  // ログイン処理\r\n  login(){\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    var self = this;\r\n    firebase.auth().signInWithPopup(provider)\r\n      .then((result)=>{\r\n        this.props.dispatch({\r\n          type:'UPDATE_USER',\r\n          value:{\r\n            login:true,\r\n            username: result.user.displayName,\r\n            email: result.user.email,\r\n            data:this.props.data,\r\n            items:this.props.items\r\n          }\r\n        });\r\n        this.props.onLogined();\r\n    });\r\n  }\r\n\r\n\r\n  // ログアウト処理\r\n  logout(){\r\n    console.log(\"logout\");\r\n    firebase.auth().signOut();\r\n    this.props.dispatch({\r\n      type:'UPDATE_USER',\r\n      value:{\r\n        login:false,\r\n        username: '(click here!)',\r\n        email: '',\r\n        data:[],\r\n        items:[]\r\n      }\r\n    });\r\n    this.props.onLogouted();\r\n  }\r\n\r\n\r\n  // login,loguoutの✓\r\n  login_check(){\r\n    if (this.props.login == false){\r\n        this.login();\r\n    } else {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n\r\n  // レンダリング\r\n  render() {\r\n    return (\r\n      <p className=\"login\">\r\n        <span  className=\"account\"\r\n          onClick={this.login_check}>\r\n          LOGINED: {this.props.username}\r\n        </span>\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nAccount = connect((state)=> state)(Account);\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}