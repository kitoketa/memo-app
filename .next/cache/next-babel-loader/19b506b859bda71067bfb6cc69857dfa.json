{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nvar config = {\n  apiKey: \"AIzaSyDi0H2-gMwcI8vpFFRU_OU4KRsZPgmAkzc\",\n  authDomain: \"kawahara-react.firebaseapp.com\",\n  databaseURL: \"https://kawahara-react.firebaseio.com\",\n  projectId: \"kawahara-react\",\n  storageBucket: \"kawahara-react.appspot.com\",\n  messagingSenderId: \"416403774767\",\n  appId: \"1:416403774767:web:5ba10cbe35bc35b1fdd5da\",\n  measurementId: \"G-X2GJJFC1CL\"\n};\nvar fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nvar initial = {\n  login: false,\n  username: '(click here!)',\n  data: [],\n  items: []\n}; // レデューサー\n\nfunction fireReduser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_USER':\n      return action.value;\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReduser, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:/Users/roone/git/memo-app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initializeApp","error","console","log","message","initial","login","username","data","items","fireReduser","state","action","type","value","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,IAAIC,OAAJ;;AACA,IAAI;AACAA,EAAAA,OAAO,GAAGV,QAAQ,CAACW,aAAT,CAAuBV,MAAvB,CAAV;AACH,CAFD,CAEE,OAAOW,KAAP,EAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AACD,eAAeL,OAAf,C,CAEA;;AACA,IAAMM,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAC,KADM;AAEZC,EAAAA,QAAQ,EAAC,eAFG;AAGZC,EAAAA,IAAI,EAAE,EAHM;AAIZC,EAAAA,KAAK,EAAC;AAJM,CAAhB,C,CAOA;;AACA,SAASC,WAAT,GAA8C;AAAA,MAAzBC,KAAyB,uEAAjBN,OAAiB;AAAA,MAARO,MAAQ;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAOD,MAAM,CAACE,KAAd;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH;;AAED,OAAO,SAASI,SAAT,GAAoC;AAAA,MAAjBJ,KAAiB,uEAATN,OAAS;AACvC,SAAOnB,WAAW,CAACwB,WAAD,EAAcC,KAAd,EACdxB,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport firebase from \"firebase\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDi0H2-gMwcI8vpFFRU_OU4KRsZPgmAkzc\",\r\n    authDomain: \"kawahara-react.firebaseapp.com\",\r\n    databaseURL: \"https://kawahara-react.firebaseio.com\",\r\n    projectId: \"kawahara-react\",\r\n    storageBucket: \"kawahara-react.appspot.com\",\r\n    messagingSenderId: \"416403774767\",\r\n    appId: \"1:416403774767:web:5ba10cbe35bc35b1fdd5da\",\r\n    measurementId: \"G-X2GJJFC1CL\"\r\n};\r\n\r\nlet fireapp;\r\ntry {\r\n    fireapp = firebase.initializeApp(config);\r\n} catch (error) {\r\n    console.log(error.message);\r\n}\r\nexport default fireapp;\r\n\r\n// ステート初期値\r\nconst initial = {\r\n    login:false,\r\n    username:'(click here!)',\r\n    data: [],\r\n    items:[]\r\n}\r\n\r\n// レデューサー\r\nfunction fireReduser(state = initial, action) {\r\n    switch (action.type) {\r\n        case 'UPDATE_USER':\r\n            return action.value;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function initStore(state = initial) {\r\n    return createStore(fireReduser, state,\r\n        applyMiddleware(thunkMiddleware))\r\n}"]},"metadata":{},"sourceType":"module"}