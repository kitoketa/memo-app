{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\roone\\\\git\\\\memo-app\\\\components\\\\Login.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport Account from './Account';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.logouted = _this.logouted.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login,logout処理\n\n\n  _createClass(Login, [{\n    key: \"logined\",\n    value: function logined() {\n      alert(\"ログインしました\");\n      Router.push('/memo_list');\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      alert(\"ログインしてください\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, __jsx(Account, {\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin = connect(function (state) {\n  return state;\n})(Login);\nexport default Login;","map":{"version":3,"sources":["C:/Users/roone/git/memo-app/components/Login.js"],"names":["React","Component","connect","Router","Account","Login","props","logined","bind","logouted","alert","push","state"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,K;;;;;AAEF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AAHe;AAIlB,G,CAED;;;;;8BACS;AACLE,MAAAA,KAAK,CAAC,UAAD,CAAL;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,YAAZ;AACF;;;+BACQ;AACND,MAAAA,KAAK,CAAC,YAAD,CAAL;AACH;;;6BAEO;AACJ,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,SAAS,EAAE,KAAKH,OAAzB;AACE,QAAA,UAAU,EAAE,KAAKE,QADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD;;;;EAxBaR,S;;AA2BpBI,KAAK,GAAGH,OAAO,CAAC,UAACU,KAAD;AAAA,SAAUA,KAAV;AAAA,CAAD,CAAP,CAAyBP,KAAzB,CAAR;AACA,eAAeA,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport Account from './Account';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.logined = this.logined.bind(this);\r\n        this.logouted = this.logouted.bind(this);\r\n    }\r\n\r\n    // login,logout処理\r\n    logined(){\r\n        alert(\"ログインしました\")\r\n        Router.push('/memo_list')\r\n     }\r\n    logouted(){\r\n        alert(\"ログインしてください\")\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div>\r\n            <Account onLogined={this.logined}\r\n              onLogouted={this.logouted} />\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\nLogin = connect((state)=> state)(Login);\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}