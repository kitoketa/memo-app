{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roone\\\\git\\\\memo-app\\\\components\\\\Account.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.login_check = this.login_check.bind(this);\n  } // ログイン処理\n\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email,\n          data: this.props.data,\n          items: this.props.items\n        }\n      });\n      this.props.onLogined();\n    });\n  } // ログアウト処理\n\n\n  logout() {\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    });\n    this.props.onLogouted();\n  } // login,loguoutの✓\n\n\n  login_check() {\n    if (this.props.login == false) {\n      this.login();\n    } else {\n      this.logout();\n    }\n  } // レンダリング\n\n\n  render() {\n    return __jsx(\"p\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      className: \"account\",\n      onClick: this.login_check,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"LOGINED: \", this.props.username));\n  }\n\n}\n\nAccount = connect(state => state)(Account);\nexport default Account;","map":{"version":3,"sources":["C:/Users/roone/git/memo-app/components/Account.js"],"names":["React","Component","connect","firebase","Account","constructor","props","fontSize","padding","login_check","bind","login","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","data","items","onLogined","logout","console","log","signOut","onLogouted","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAO9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,mCANX;AACNC,MAAAA,QAAQ,EAAC,MADH;AAENC,MAAAA,OAAO,EAAC;AAFF,KAMW;;AAEjB,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD,GAV6B,CAa9B;;;AACAC,EAAAA,KAAK,GAAE;AACL,QAAIC,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAZ,IAAAA,QAAQ,CAACU,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACGK,IADH,CACSC,MAAD,IAAU;AACd,WAAKZ,KAAL,CAAWa,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAC,aADa;AAElBC,QAAAA,KAAK,EAAC;AACJV,UAAAA,KAAK,EAAC,IADF;AAEJW,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFlB;AAGJC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE,KAHf;AAIJC,UAAAA,IAAI,EAAC,KAAKpB,KAAL,CAAWoB,IAJZ;AAKJC,UAAAA,KAAK,EAAC,KAAKrB,KAAL,CAAWqB;AALb;AAFY,OAApB;AAUA,WAAKrB,KAAL,CAAWsB,SAAX;AACH,KAbD;AAcD,GA/B6B,CAkC9B;;;AACAC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA5B,IAAAA,QAAQ,CAACU,IAAT,GAAgBmB,OAAhB;AACA,SAAK1B,KAAL,CAAWa,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAC,aADa;AAElBC,MAAAA,KAAK,EAAC;AACJV,QAAAA,KAAK,EAAC,KADF;AAEJW,QAAAA,QAAQ,EAAE,eAFN;AAGJG,QAAAA,KAAK,EAAE,EAHH;AAIJC,QAAAA,IAAI,EAAC,EAJD;AAKJC,QAAAA,KAAK,EAAC;AALF;AAFY,KAApB;AAUA,SAAKrB,KAAL,CAAW2B,UAAX;AACD,GAjD6B,CAoD9B;;;AACAxB,EAAAA,WAAW,GAAE;AACX,QAAI,KAAKH,KAAL,CAAWK,KAAX,IAAoB,KAAxB,EAA8B;AAC1B,WAAKA,KAAL;AACH,KAFD,MAEO;AACL,WAAKkB,MAAL;AACD;AACF,GA3D6B,CA8D9B;;;AACAK,EAAAA,MAAM,GAAG;AACP,WACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,SAAjB;AACE,MAAA,OAAO,EAAE,KAAKzB,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEY,KAAKH,KAAL,CAAWgB,QAFvB,CADF,CADF;AAQD;;AAxE6B;;AA4EhClB,OAAO,GAAGF,OAAO,CAAEiC,KAAD,IAAUA,KAAX,CAAP,CAAyB/B,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nclass Account extends Component {\r\n  style = {\r\n    fontSize:\"12pt\",\r\n    padding:\"5px 10px\"\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.login_check = this.login_check.bind(this);\r\n  }\r\n\r\n\r\n  // ログイン処理\r\n  login(){\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    var self = this;\r\n    firebase.auth().signInWithPopup(provider)\r\n      .then((result)=>{\r\n        this.props.dispatch({\r\n          type:'UPDATE_USER',\r\n          value:{\r\n            login:true,\r\n            username: result.user.displayName,\r\n            email: result.user.email,\r\n            data:this.props.data,\r\n            items:this.props.items\r\n          }\r\n        });\r\n        this.props.onLogined();\r\n    });\r\n  }\r\n\r\n\r\n  // ログアウト処理\r\n  logout(){\r\n    console.log(\"logout\");\r\n    firebase.auth().signOut();\r\n    this.props.dispatch({\r\n      type:'UPDATE_USER',\r\n      value:{\r\n        login:false,\r\n        username: '(click here!)',\r\n        email: '',\r\n        data:[],\r\n        items:[]\r\n      }\r\n    });\r\n    this.props.onLogouted();\r\n  }\r\n\r\n\r\n  // login,loguoutの✓\r\n  login_check(){\r\n    if (this.props.login == false){\r\n        this.login();\r\n    } else {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n\r\n  // レンダリング\r\n  render() {\r\n    return (\r\n      <p className=\"login\">\r\n        <span  className=\"account\"\r\n          onClick={this.login_check}>\r\n          LOGINED: {this.props.username}\r\n        </span>\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nAccount = connect((state)=> state)(Account);\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}