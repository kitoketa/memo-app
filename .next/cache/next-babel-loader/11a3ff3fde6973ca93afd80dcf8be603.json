{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roone\\\\git\\\\memo-app\\\\components\\\\MemoList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from './Account';\n\nclass MemoList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.logined = this.logined.bind(this);\n    this.logouted = this.logouted.bind(this);\n  }\n\n  logined() {\n    this.getMemoList();\n  }\n\n  logouted() {\n    Router.push('/');\n  }\n\n  getMemoList() {\n    if (this.props.email == undefined || this.props.email == '') {\n      return;\n    }\n\n    let email = Lib.encodeEmail(this.props.email);\n    let db = firebase.database();\n    let ref = db.ref('memo/');\n    let self = this;\n    ref.orderByKey().equalTo(email).on('value', snapshot => {\n      let d = Lib.deepcopy(snapshot.val());\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: this.props.login,\n          username: this.props.username,\n          email: this.props.email,\n          data: d,\n          items: self.getItem(d)\n        }\n      });\n    });\n  }\n\n  getItem(data) {\n    if (data == undefined) {\n      return;\n    }\n\n    let res = [];\n    console.log(data);\n\n    for (let i in data) {\n      console.log(i);\n\n      for (let j in data[i]) {\n        console.log(data[i][j]);\n        let id = data[i][j].id;\n        let title = data[i][j].title;\n        let body = data[i][j].body;\n        res.push(__jsx(\"li\", {\n          key: title,\n          \"data-tag\": body,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 26\n          }\n        }, \"\\u30BF\\u30A4\\u30C8\\u30EB:\", title, \"\\u8A73\\u7D30:\", body));\n      }\n\n      break;\n    }\n\n    console.log(res);\n    return res;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"\\u30E1\\u30E2\\u4E00\\u89A7\"), __jsx(Account, {\n      self: this,\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), this.props.items);\n  }\n\n}\n\nMemoList = connect(state => state)(MemoList);\nexport default MemoList;","map":{"version":3,"sources":["C:/Users/roone/git/memo-app/components/MemoList.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","MemoList","constructor","props","fontSize","padding","logined","bind","logouted","getMemoList","push","email","undefined","encodeEmail","db","database","ref","self","orderByKey","equalTo","on","snapshot","d","deepcopy","val","dispatch","type","value","login","username","data","items","getItem","res","console","log","i","j","id","title","body","render","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport firebase from \"firebase\";\r\nimport Lib from '../static/address_lib';\r\nimport Account from './Account';\r\n\r\nclass MemoList extends Component {\r\n    style = {\r\n        fontSize:\"12pt\",\r\n        padding:\"5px 10px\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.logined = this.logined.bind(this);\r\n        this.logouted = this.logouted.bind(this);\r\n    }\r\n\r\n    logined(){\r\n        this.getMemoList();\r\n    }\r\n    logouted(){\r\n        Router.push('/');\r\n    }\r\n\r\n    getMemoList() {\r\n        if (this.props.email == undefined ||\r\n            this.props.email == ''){ return; }\r\n        let email = Lib.encodeEmail(this.props.email);\r\n        let db = firebase.database();\r\n        let ref = db.ref('memo/');\r\n        let self = this;\r\n        ref.orderByKey()\r\n            .equalTo(email)\r\n            .on('value', (snapshot)=>{\r\n                let d = Lib.deepcopy(snapshot.val());\r\n                this.props.dispatch({\r\n                    type:'UPDATE_USER',\r\n                    value:{\r\n                        login:this.props.login,\r\n                        username: this.props.username,\r\n                        email: this.props.email,\r\n                        data:d,\r\n                        items:self.getItem(d)\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    getItem(data) {\r\n        if (data == undefined){ return; }\r\n        let res = [];\r\n        console.log(data)\r\n        for (let i in data){\r\n            console.log(i)\r\n            for(let j in data[i]){\r\n                console.log(data[i][j])\r\n                let id = data[i][j].id;\r\n                let title = data[i][j].title;\r\n                let body = data[i][j].body;\r\n                res.push(<li key={title} data-tag={body}>\r\n                    タイトル:{title}\r\n                    詳細:{body}\r\n                </li>);\r\n            }\r\n            break;\r\n        }\r\n        console.log(res)\r\n        return res;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>メモ一覧</h1>\r\n                <Account self={this} onLogined={this.logined}\r\n                    onLogouted={this.logouted} />\r\n            <hr/>\r\n            {this.props.items}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMemoList = connect((state)=> state)(MemoList);\r\nexport default MemoList;"]},"metadata":{},"sourceType":"module"}